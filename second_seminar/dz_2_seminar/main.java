/////////////////////////////////////////////////////////////////////////////////////////////////
///1 - Напишите программу, чтобы проверить, содержит ли данная строка только цифры.//////////////
///(с возможностью ввода или нет решайте сами)///////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* package GB_java_education.second_seminar.dz_2_seminar;

import java.util.Scanner;

public class main {
    String regex = "[0-9]+"; //почитал в интернете, вроде, это самый простой способ задать цифры.
    
    Scanner iScanner = new Scanner(System.in); // пусть пользователь все-таки вводит число.
    System.out.println("Введите число");
    int my_number = Integer.parseInt(iScanner.nextLine());
    iScanner.close();


    System.out.println(my_number.matches(regex)); // метод match вроде должен все проверять
    
} */

/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
////////Второе задание копирует первое, так что повторять не вижу смысла/////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//Напишите программу для объединения данной строки с самим собой заданное/////////////////////////
//количество раз(количество и строку мы вводим)//////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* 
package GB_java_education.second_seminar.dz_2_seminar;
import java.util.Scanner;
import java.util.Arrays;
public class ьain {    
    public static void main(String[] args) {
        Scanner iScanner = new Scanner(System.in); 
        System.out.println("Введите исходную строку:");
        String var = iScanner.nextLine();
        System.out.println("Исходная строка: " + var);
        System.out.println("Введите количество объеденений строки:");
        int n = Integer.parseInt(iScanner.nextLine());
        String result = repeat_str(var, n);
        System.out.println("После повторения" + n + "раз, результат: " + result);
        iScanner.close();
   }
public static String repeat_str(String var, int n) {
       if (var == null || var.isEmpty()) {
           return "";
       }
       if (n <= 0) {
           return var;
       }
       if (Integer.MAX_VALUE / n < var.length()) {
           throw new OutOfMemoryError("Слишком большое число, введите другое");
       }
       StringBuilder x = new StringBuilder(var.length() * n);
       for (int i = 1; i <= n; i++) {
           x.append(var);
       }
       return x.toString();
   }
} */

/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////Метод charAt() ///////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test {

    public static void main(String args[]) {
       String s = "Очень простое задание";
       char result1 = s.charAt(5); / Возвращает символ по указанному индексу.
       char result2 = s.charAt(9);
       System.out.println("5 символ строки - " + result1);
       System.out.println("9 символ строки - " + result2);
    }
 }
  */

/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////Метод compareTo()////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////
  
/* public class Test {

    public static void main(String args[]) {
       String str1 = "Я буду хорошим программистом!";
       String str2 = "Я буду хорошим программистом!";
       String str3 = "Я буду хорошим дворником!";
 
       int result = str1.compareTo(str2); // Сравнивает две строки лексически
       System.out.println(result);
       
       result = str2.compareTo(str3);
       System.out.println(result);
      
       result = str3.compareTo(str1);
       System.out.println(result);
    }
} */

/////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////Метод compareToIgnoreCase()//////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test {

    public static void main(String args[]) {
       String str1 = "Я буду хорошим программистом!";
       String str2 = "Я Буду Хорошим Программистом!";
       String str3 = "Я буду хорошим дворником!";
 
       int result = str1.compareToIgnoreCase(str2); /сравнивает количество букв строк без учета регистра
       System.out.println(result);
       
       result = str2.compareToIgnoreCase(str3);
       System.out.println(result);
      
       result = str3.compareToIgnoreCase(str1);
       System.out.println(result);
    }
} 
*/

////////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////Метод concat()////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test {

    public static void main(String args[]) {
       String s = "Я стану программистом!";
       s = s.concat(" Очень хорошим программистом!"); //соединяет строки
       
       System.out.println(s);
    }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////Метод contentEquals()/////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test {

    public static void main(String args[]) {
       String str1 = "Добро пожаловать на gb.ru";
       String str2 = "Сайт для обучения программированию";
       StringBuffer str3 = new StringBuffer("Добро пожаловать на gb.ru");
       StringBuffer str4 = new StringBuffer("Добро пожаловать");
 
       boolean  result = str1.contentEquals(str3); //проверяет одинаковы ли строки

       System.out.println("Строка \"Добро пожаловать на gb.ru\" равна строке буфера \"Добро пожаловать на gb.ru\"? \n" + result);
       
       result = str2.contentEquals(str3);
       System.out.println("Строка \"Сайт для обучения программированию\" равна строке буфера \"Добро пожаловать на gb.ru\"? \n" + result);
       
       result = str1.contentEquals(str4);
       System.out.println("Строка \"Добро пожаловать на gb.ru\" равна строке буфера \"Добро пожаловать\"? \n" + result);
    }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод endsWith()///////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test{

    public static void main(String args[]){
       String Str = new String("Добро пожаловать на gb.ru");
       boolean retVal;
 
       retVal = Str.endsWith("gb.ru"); // проверяет, заканчивается ли эта строка указанным окончанием.
       System.out.println("Возвращаемое значение: " + retVal);
 
       retVal = Str.endsWith("gb");
       System.out.println("Возвращаемое значение: " + retVal);
    }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод equalsIgnoreCase()///////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* public class Test {

    public static void main(String args[]) {
       String Str1 = "Добро пожаловать на gb.ru";
       String Str2 = Str1;
       String Str3 = new String("Сайт для обучения программированию");
       String Str4 = new String("ДОБРО ПОЖАЛОВАТЬ НА GB.RU");
       boolean retVal;
 
       retVal = Str1.equalsIgnoreCase(Str2); //сравнивает данную строку с другой строкой, игнорируя регистр. 
                                             //Две строки считаются равными, если они имеют одинаковую длину 
                                             //и соответствующие символы у двух строк равны, игнорируя регистр букв.
       System.out.println("Строка Str1 равна строке Str2? Ответ: " + retVal );
 
       retVal = Str1.equalsIgnoreCase(Str3);
       System.out.println("Строка Str1 равна строке Str3? Ответ: " + retVal );
       
       retVal = Str1.equalsIgnoreCase(Str4);
       System.out.println("Строка Str1 равна строке Str4? Ответ: " + retVal );
    }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод intern()/////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* import java.io.*;

public class Test{
   public static void main(String args[]){
      String Str1 = new String("Добро пожаловать на gb.ru");
      String Str2 = new String("ДОБРО ПОЖАЛОВАТЬ НА GB.RU");

      System.out.print("Каноническое представление Str1: " );
      System.out.println(Str1.intern());    // возвращает каноническое представление для строкового объекта. 
                                            //Отсюда следует, что для любых двух строк s и t, s.intern() == t.intern(), 
                                            //истинно тогда и только тогда, когда s.equals(t) имеет значение true.

      System.out.print("Каноническое представление Str2: " );
      System.out.println(Str2.intern());
   }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод length()/////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* import java.io.*;

public class Test {

   public static void main(String args[]){
      String Str1 = new String("Добро пожаловать на gb.ru");
      String Str2 = new String("gb.ru" );

      System.out.print("Длина строки \"Добро пожаловать на gb.ru\" - " );
      System.out.println(Str1.length()); // возвращает длину строки в Java.

      System.out.print("Длина строки \"gb.ru\" - " );
      System.out.println(Str2.length());
   }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод substring()//////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* import java.io.*;

public class Test {

   public static void main(String args[]){
      String Str = new String("Добро пожаловать на gb.ru");

      System.out.print("Возвращаемое значение: ");
      System.out.println(Str.substring(5));     //возвращает новую строку, которая является подстрокой данной строки.
                                                //в данном случае, подстрока начнется с пятого символа строки Str

      System.out.print("Возвращаемое значение: ");
      System.out.println(Str.substring(5, 15)); //в данном случае, подстрока начнется с пятого символа строки Str 
                                                //и закончится на 15
   }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////Метод toCharArray()////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* import java.io.*;

public class Test {

   public static void main(String args[]){
      String Str = new String("Добро пожаловать на gb.ru");

      System.out.print("Возвращаемое значение: ");
      System.out.println(Str.toCharArray()); //преобразует данную строку в новый массив символов
   }
} */

///////////////////////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////Метод trim()////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////

/* import java.io.*;

public class Test {

   public static void main(String args[]){
      String Str = new String("   Добро пожаловать на gb.ru   ");

      System.out.print("Возвращаемое значение: ");
      System.out.println(Str.trim());   //возвращает копию строки с пропущенными начальными 
                                        //и конечными пробелами, другими словами метод позволяет 
                                        //в Java удалить пробелы в начале и конце строки.
   }
} */
