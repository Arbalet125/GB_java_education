////////////////////////////////////////////////////////////////////////////////////////////////////
// В игре в пьяницу карточная колода раздается поровну двум игрокам. Далее они
// вскрывают по одной верхней карте, и тот, чья карта старше, забирает себе обе вскрытые
// карты, которые кладутся под низ его колоды. Тот, кто остается без карт – проигрывает.
// Для простоты будем считать, что все карты различны по номиналу, а также, что самая
// младшая карта побеждает самую старшую карту ("шестерка берет туза").
// Игрок, который забирает себе карты, сначала кладет под низ своей колоды карту первого
// игрока, затем карту второго игрока (то есть карта второго игрока оказывается внизу
// колоды).
// Напишите программу, которая моделирует игру в пьяницу и определяет, кто выигрывает.
// В игре участвует 10 карт, имеющих значения от 0 до 9, большая карта побеждает
// меньшую, карта со значением 0 побеждает карту 9.
// Формат входных данных
// Программа получает на вход две строки: первая строка содержит 5 карт первого игрока,
// вторая – 5 карт второго игрока. Карты перечислены сверху вниз, то есть каждая строка
// начинается с той карты, которая будет открыта первой.
// Формат выходных данных
// Программа должна определить, кто выигрывает при данной раздаче, и вывести
// слово first или second или любое другое, после чего вывести количество ходов, сделанных до выигрыша.
// Если на протяжении 100000 ходов игра не заканчивается, программа должна вывести
// словоbotva.

// Входные данные
// 1 3 5 7 9
// 2 4 6 8 0
// Выходные данные
// second 5
// 2:*
///////////////////////////////////////////////////////////////////////////////////////////////////


/* import java.util.LinkedList;

package GB_java_education.four_seminar.dz_4_seminar;

public class Game {
    LinkedList<Integer> fp, sp;

    public Game(String fp, String sp) {
        this.fp = new LinkedList<>();
        this.sp = new LinkedList<>();
        for(int i = 0; i < 5; i ++){
            this.fp.add(Integer.parseInt(fp.substring(i, i+1)));
            this.sp.add(Integer.parseInt(sp.substring(i, i+1)));
        }
    }


    public String play(){
        int count = 0;
        while(!fp.isEmpty() && !sp.isEmpty() && count <= 106){
            if(fp.peek() > sp.peek()
                    && sp.peek() != 0){
                fp.add(fp.remove());
                fp.add(sp.remove());

            }else{
                sp.add(fp.remove());
                sp.add(sp.remove());
            }
            count++;
        }
        String res = "";
        if(fp.isEmpty()) res += "second ";
        else res += "first ";
        res += count;
        if(count >= 106) res += " botva";
        return res;
    }

    public static void main(String[] args) {
        System.out.println(new Game("13579", "24680").play());
        System.out.println(new Game("12345", "67890").play());
        System.out.println(new Game("13029", "42685").play());
    }

} */